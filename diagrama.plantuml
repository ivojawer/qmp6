@startuml
class NotificationService{
    +notify(text)
}

class MailSender{
    +send(address,message)
}

class GeneradorSugerencias{
    -subscriptoresSugerencias: List<Usuario>
    +subscribir(usuario)
}
GeneradorSugerencias --> "*" Usuario


abstract class ServicioMeteorologico{
    +List<Alerta> obtenerAlertasActuales(String direccion)
}

ServicioMeteorologico <|.. ServicioMeteorologicoAccuWeather

ServicioMeteorologico ..> Alerta

class ServicioMeteorologicoAccuWeather{
   
    +List<Alerta> obtenerAlertasActuales(String direccion)
}

class AlertadorMeteorologico{
    -subscriptoresAlertas: List<Usuario>
    +subscribirse(usuario)
    +desuscribirse(usuario)
    +revisarAlertas(direccion)
    -postearAlertas(alertas)
    -Alerta textoAAlerta(alertaEnTexto)
    -servicioMeteorologico
}

AlertadorMeteorologico --> ServicioMeteorologico

enum Alerta{
    GRANIZO
    LLUVIA
    TORMENTA
    +descripcion()
}

interface AccionAlertaMeteorologica{
    +alertar(usuario,alerta)
}

class MandarMail{
    -mailSender: MailSender
    +alertar(usuario,alerta)
}

MandarMail --> MailSender

class RecalculoSugerencia{
    +alertar(usuario,alerta)
}

class NotificarGranizo{
    -notificationService: NotificationService
    +alertar(usuario,alerta)
}

NotificarGranizo --> NotificationService 
AccionAlertaMeteorologica ..> Alerta
AccionAlertaMeteorologica <|.. MandarMail
AccionAlertaMeteorologica <|.. RecalculoSugerencia
AccionAlertaMeteorologica <|.. NotificarGranizo

class Usuario{
    -direcicon: String
    -direccionMail: String
    -List<AccionAlertaMeteorologica> accionesAlertaMeteorologica
    +recibirAlerta(alerta)
    +generarSugerenciaDiara()
}
Usuario ..>"constructor" AlertadorMeteorologico
Usuario --> "*" AccionAlertaMeteorologica
Usuario ..> Alerta
@enduml